import { Aggregator } from "./aggregator";
import { Context, ProcessingMode } from "./core";
import { Query } from "./query";
import { createUpdater, update } from "./updater";
import { Aggregator as Aggregator2 } from "./aggregator";
import { Context as Context2, ProcessingMode as ProcessingMode2 } from "./core";
import { Query as Query2 } from "./query";
import { createUpdater as createUpdater2, update as update2 } from "./updater";
function find(collection, criteria, projection, options) {
  return new Query(criteria, options).find(collection, projection);
}
function aggregate(collection, pipeline, options) {
  return new Aggregator(pipeline, options).run(collection);
}
var index_default = {
  Aggregator,
  Context,
  ProcessingMode,
  Query,
  aggregate,
  createUpdater,
  find,
  update
};
export {
  Aggregator2 as Aggregator,
  Context2 as Context,
  ProcessingMode2 as ProcessingMode,
  Query2 as Query,
  aggregate,
  createUpdater2 as createUpdater,
  index_default as default,
  find,
  update2 as update
};
