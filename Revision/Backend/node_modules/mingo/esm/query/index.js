import { initOptions } from "../core";
import * as booleanOperators from "../operators/expression/boolean";
import * as comparisonOperators from "../operators/expression/comparison";
import * as projectionOperators from "../operators/projection";
import * as queryOperators from "../operators/query";
import { QueryImpl } from "./_internal";
class Query extends QueryImpl {
  /**
   * Creates an instance of the query with the specified condition and options.
   * This object is preloaded with all query and projection operators.
   *
   * @param condition - The query condition object used to define the criteria for matching documents.
   * @param options - Optional configuration settings to customize the query behavior.
   */
  constructor(condition, options) {
    const opts = initOptions(options);
    opts.context.addExpressionOps(booleanOperators).addExpressionOps(comparisonOperators).addProjectionOps(projectionOperators).addQueryOps(queryOperators);
    super(condition, opts);
  }
}
export {
  Query
};
