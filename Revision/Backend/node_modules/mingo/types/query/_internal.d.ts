import { Options } from "../core";
import { Cursor } from "../cursor";
import { Source } from "../lazy";
import { AnyObject } from "../types";
export declare class QueryImpl {
    #private;
    constructor(condition: AnyObject, options: Options);
    private compile;
    private processOperator;
    /**
     * Tests whether the given object satisfies all compiled predicates.
     *
     * @template T - The type of the object to test.
     * @param obj - The object to be tested against the compiled predicates.
     * @returns `true` if the object satisfies all predicates, otherwise `false`.
     */
    test<T>(obj: T): boolean;
    /**
     * Returns a cursor for iterating over the items in the given collection that match the query criteria.
     *
     * @typeParam T - The type of the items in the resulting cursor.
     * @param collection - The source collection to search through.
     * @param projection - An optional object specifying fields to include or exclude
     *                      in the returned items.
     * @returns A `Cursor` instance for iterating over the matching items.
     */
    find<T>(collection: Source, projection?: AnyObject): Cursor<T>;
}
